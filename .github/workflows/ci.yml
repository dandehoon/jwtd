name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

permissions:
  contents: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest

    - name: Run tests
      run: make test

  auto-tag:
    name: Create Tag
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Bump version and push tag
      id: tag-version
      uses: anothrNick/github-tag-action@1.67.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch

  release:
    name: Create Release
    needs: auto-tag
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Get latest tag
      id: get-tag
      run: |
        TAG=$(git describe --tags --abbrev=0)
        echo "tag=$TAG" >> $GITHUB_OUTPUT

    - name: Build release binaries
      run: |
        VERSION=${{ steps.get-tag.outputs.tag }}
        LDFLAGS="-X github.com/dandehoon/jwtd/cmd.VERSION=$VERSION"

        mkdir -p dist

        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 go build -ldflags "$LDFLAGS" -o dist/jwtd-linux-amd64 .
        GOOS=linux GOARCH=arm64 go build -ldflags "$LDFLAGS" -o dist/jwtd-linux-arm64 .
        GOOS=darwin GOARCH=amd64 go build -ldflags "$LDFLAGS" -o dist/jwtd-darwin-amd64 .
        GOOS=darwin GOARCH=arm64 go build -ldflags "$LDFLAGS" -o dist/jwtd-darwin-arm64 .
        GOOS=windows GOARCH=amd64 go build -ldflags "$LDFLAGS" -o dist/jwtd-windows-amd64.exe .

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get-tag.outputs.tag }}
        name: Release ${{ steps.get-tag.outputs.tag }}
        draft: false
        prerelease: false
        files: |
          dist/jwtd-linux-amd64
          dist/jwtd-linux-arm64
          dist/jwtd-darwin-amd64
          dist/jwtd-darwin-arm64
          dist/jwtd-windows-amd64.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
